{"version":3,"sources":["header/headerContents/HeaderMenu.js","header/Header.js","footer/Footer.js","header/Atyping.js","App.js","serviceWorker.js","index.js"],"names":["HeaderMenu","className","href","src","Header","Component","Footer","Atyping","props","speed","loop","info1","Backspace","count","App","size","window","innerWidth","document","body","clientWidth","innerHeight","clientHeight","bgImage","strength","style","minHeight","background","left","top","position","padding","transform","fontSize","borderRadius","borderBottom","width","float","marginTop","fontWeight","display","borderSpacing","backgroundColor","textAlign","opacity","speak","paddingBottom","marginLeft","maxwidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4d6078b6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function HeaderMenu() {\r\n  const img1 = \"./Img/sns.jpg\";\r\n  const img2 = \"./Img/user.png\";\r\n  return (\r\n    <div className=\"header-menu\">\r\n      <ul className=\"header-1\">\r\n        <li><a href='/'><img className=\"sns\" src= {img1}></img></a></li>\r\n        <li className=\"li-menu\"><a href='/' className=\"header-top-menu\">BLOG</a></li>\r\n      </ul>\r\n      <ul className=\"header-2\">\r\n        <li><a href='/'><img className=\"user\" src= {img2}></img></a></li>\r\n        <li><a href='/' className=\"header-top-menu\">JOIN US</a></li>\r\n        <li><a href='/' className=\"header-top-menu\">LOGIN</a></li>\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./header.css\";\r\nimport HeaderMenu from './headerContents/HeaderMenu';\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <HeaderMenu />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './footer.css';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className ='footer'>\r\n      <ul className = 'footer_ul'>\r\n        <li> INTRO</li>\r\n        <li>ㆍ</li>\r\n        <li> KEYWORD</li>\r\n        <li>ㆍ</li>\r\n        <li> PORTFOLIO</li>\r\n        <li>ㆍ</li>\r\n        <li> GALLERY</li>\r\n        <li>ㆍ</li>\r\n        <li> CONTACT</li>\r\n      </ul>\r\n      <h2>\r\n        <p>©2020 YONGSUNG GIL</p>\r\n      </h2>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Typing from 'react-typing-animation';\r\n\r\nexport default function Atyping(props) {\r\n  return (\r\n    <div>\r\n      <Typing speed={100} loop={true}>\r\n        {props.info1}\r\n        <Typing.Backspace count={20} />\r\n    {/* <Typing.Speed ms={200} /> */}\r\n    </Typing>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './header/Header';\nimport { Parallax } from 'react-parallax';\nimport Footer from './footer/Footer';\nimport Atyping from './header/Atyping';\n\nfunction App() {\n  const image1 = \"https://i.imgur.com/CLUakBD.jpg\";\n  const image2 = \"./Img/dragon.jpg\"\n  const inlineStyle = {\n    background : '#fff',\n    left : '50%',\n    top : '50%',\n    position : 'absolute',\n    padding : '20px',\n    transform : 'translate(-50%, -50%)',\n    fontSize : '30px',\n    borderRadius : '3%',\n    borderBottom : '2px solid #c9c9c9'\n  }\n  const size = {\n      width: window.innerWidth || document.body.clientWidth,\n      height: window.innerHeight || document.body.clientHeight\n    }\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Parallax bgImage={image1} strength={600}>\n        <div style={{ minHeight: '100vh' }}>\n          <div style={inlineStyle}>\n            <img src={image2} style={{ width : '150px' , borderRadius : '70%' , float : 'left'}}></img>\n            <h2 style={{width : '600px'}}>\n              <p style={{ marginTop : '20px' , fontWeight : 800}}>NAME : 길용성</p>\n              <p>AGE : 28</p>\n              <p>ADRESS : 경기도 남양주시</p>\n              <p>EMAIL : gildydtjd@naver.com</p>\n            </h2>\n          </div>\n          \n        </div>\n      </Parallax>\n\n      <div style={{ display : 'flex' ,minHeight: '100vh' , borderSpacing : '0' }}>\n        <div style={{ minHeight: '100vh' , width : size.width/2 , backgroundColor : '#0067a3'}}>\n          <h2 style={{textAlign: 'right' , padding : '10%'}}>\n            <span style={{ display: 'block', fontSize: '24px',  opacity: '.5', speak: 'none' }}>{Atyping({info1:\"Intro\"})}</span>\n            <span style={{ display: 'block', fontSize: '64px', paddingBottom: '.25em', position : 'relative'}}>About myself</span>\n          </h2>\n          \n          <div style={{ marginLeft: 'auto' , maxwidth: '35em'}} >\n          {/* <p style={{marginBlockStart: '1em', marginBlockEnd: '1em', marginInlineStart: '0px', marginInlineEnd: '0px'}}> 웹개발을 시작한 경기도의 아들 28살 길용성입니다.</p> */}\n\n          </div>\n        </div>\n\n        <div style={{ minHeight: '100vh' , width : size.width/2 , backgroundColor : 'black' }}>\n        <h2 style={{textAlign: 'left' , padding : '10%'}}>\n            <span style={{ display: 'block', fontSize: '24px',  opacity: '.5', speak: 'none' }}>{Atyping({info1:\"Skills\"})}</span>\n            <span style={{ display: 'block', fontSize: '64px', paddingBottom: '.25em', position : 'relative'}}>What I can do</span>\n          </h2>\n        </div>\n      </div>\n\n      <div style={{ minHeight: '100vh'}}></div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}